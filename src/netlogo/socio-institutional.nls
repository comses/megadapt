
to set_criteria_values
;;1) Water authority obtains information from the atributes of the landscape associated to the set of criteria
  set C1 (count patches in-radius 2 with [neighborhood_here? = TRUE])  ;* (ifelse-value (any? patches in-radius radius_l with [Infra_flood = 1] or Infra_flood = 1)[(c_F + sum [c_F] of patches in-radius radius_l with [Infra_flood = 1])/(1 + count patches in-radius radius_l with [Infra_flood = 1])][1])  ;Criteria 1 economic efficiancy. calcuate number of neighborhoods beneficiated per "dolar" invested
  set C2   protestas_here_F                   ;;criteria 2. collect the number of protest in the neighborhood located in this patch
  set C3 infra_F_age  ;;criteria 3. Collect information about the age of the infrastructure in the current patch
  set C4 (count patches in-radius radius_l with [(Infra_flood = 0 or infra_F_age > tau_ageInfra) and neighborhood_here? = TRUE]) + (ifelse-value (neighborhood_here? = TRUE and (Infra_flood = 0 or infra_F_age > tau_ageInfra))[1][0])

  set C5 C1
  set C6 protestas_here_S                   ;;criteria 2. collect the number of protest in the neighborhood located in this patch
  set C7 infra_S_age  ;;criteria 3. Collect information about the age of the infrastructure in the current patch
  set C8 (count patches in-radius radius_l with [(Infra_supply = 0 or infra_S_age > tau_ageInfra) and neighborhood_here? = true]) + (ifelse-value (neighborhood_here? = TRUE and (Infra_supply = 0 or infra_S_age > tau_ageInfra))[1][0])
end

;###############################################################################

to WA-Decisions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;The water authority selects neighborhoods according to a distance metric and compromised programing optimization

;;2) Value function transformation: tranform the information to an standarized scale using "value functions"
;;3) site Suitability: Calculate a distance metric between the state of each patch, based on the criterion, and the ideal point.
;;4) site-selection sorting neighborhoods based on the distance metric
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ask patches with [neighborhood_here? = TRUE][
      set invest_here_F 0
      set invest_here_S 0

       let V1 ifelse-value (C1 < C1max)[(C1 / C1max)][1] ; C1max - C1 / C1max - C1min                               ;;define the value functions by transforming natural scale of the information gethered by goverment
       let V2 ifelse-value (C2 < C2max)[(C2 / C2max)][1] ; C2max - C2 / C2max - C2min                                            ;;to a standarized scale [0,1] where 1 means maximal atention from goverment (1 = larger number of protested in an area

       let V3_n ifelse-value (C3 < (tau_ageInfra / 2))[0][2 * (C3 - (tau_ageInfra / 2)) / C3max]  ; C3max - C3 / C3max - C3min
       if C3 > tau_ageInfra or Infra_flood = 0[set V3_n 1]

       let V3_r ifelse-value (C3 < (tau_ageInfra / 2))[C3 / (tau_ageInfra / 2)] [(C3max - C3) / (tau_ageInfra / 2)] ; C3max - C3 / C3max - C3min
       if V3_r < 0 [set V3_r 0]


       let V4 ifelse-value (C4 < C4max)[C4 / C4max][1];C4max - C4 / C4max - C4min

       let V5 ifelse-value (C5 < C5max)[(C5 / C5max)][1];C5max - C5 / C5max - C5min                                                                              ;;define the value functions by transforming natural scale of the information gethered by goverment

       let V6 ifelse-value (C6 < C6max)[(C6 / C6max)][1];C6max - C6 / C6max - C6min                                                                      ;;to a standarized scale [0,1] where 1 means maximal atention from goverment (1 = larger number of protested in an area

       let V7_n ifelse-value (C7 < (tau_ageInfra / 2))[0][2 * (C7 - (tau_ageInfra / 2)) / C7max];C7max - C7 / C7max - C7min
       if C7 > tau_ageInfra or Infra_supply = 0[set V7_n 1]

       let V7_r ifelse-value (C7 < (tau_ageInfra / 2))[C7 / (tau_ageInfra / 2)] [(C7max - C7) / (tau_ageInfra / 2)] ;C7max - C7 / C7max - C7min
       if V7_r < 0 [set V7_r 0]

       let V8 ifelse-value (C8 <= C8max)[C8 / C8max][1];C8max - C8 / C8max - C8min

       let h_Cp 1

       let v_vec_f_r (list V1 V2 V3_r V4)
       let v_vec_f_n (list V1 V2 V3_n V4)
       let w_vec_f  (list w5 w6 w7 w8)


       let v_vec_s_r (list V5 V6 V7_r V8)
       let v_vec_s_n (list V5 V6 V7_n V8)
       let w_vec_s (list w1 w2 w3 w4)

      if ticks = 1 or ticks mod 10 = 0[

        set distance_metric_New_F (sum (map [ [?1 ?2] -> (?1 ^ h_Cp) * (?2 ^ h_Cp) ] v_vec_f_n w_vec_f)) ^ (1 / h_Cp)
        set distance_metric_New_S (sum (map [ [?1 ?2] -> (?1 ^ h_Cp) * (?2 ^ h_Cp) ] v_vec_s_n w_vec_s)) ^ (1 / h_Cp)

        set distance_metric_maintenance_F (sum (map [ [?1 ?2] -> (?1 ^ h_Cp) * (?2 ^ h_Cp) ] v_vec_f_r w_vec_f)) ^ (1 / h_Cp)
        set distance_metric_maintenance_S (sum (map [ [?1 ?2] -> (?1 ^ h_Cp) * (?2 ^ h_Cp) ] v_vec_s_r w_vec_s)) ^ (1 / h_Cp)


      ]

    ]
;##############################################################################################################################
  ;Site selection
    let tot_neighborhoods (count patches with [neighborhood_here? = true])
    if budget-distribution = "regional"[                                            ;patches are compared based on decition for each action
      let tot_cost_Maintance 0
      let bud_mant 2 * round (tot_neighborhoods * maintenance) ;;; scale budget proportional to the number of neighborhoods
      let rank_A1 sort-on [1 - distance_metric_maintenance_F] patches with [neighborhood_here? = TRUE]   ;;;sort neighborhoods based on distance metric Action 1 mantanance F.
      let rank_A3 sort-on [1 - distance_metric_maintenance_S] patches with [neighborhood_here? = TRUE]   ;;;sort neighborhoods based on distance metric Action 3 mantanance S.

      (foreach rank_A1 rank_A3 [ [?1 ?2] ->
        if [infra_flood] of ?1 = 1 [
          if tot_cost_Maintance < bud_mant[
            ask ?1 [
              ;;if total cost until now is lower than budget then mantain the infra in this patch
              set tot_cost_Maintance tot_cost_Maintance + 1               ;;add to the total cost
              set infra_F_age infra_F_age - 0.1 * infra_F_age              ;;update the state (age) of infrastructure
              set invest_here_F 1
            ]
          ]
        ]
        if [infra_supply] of ?2 = 1[
          if tot_cost_Maintance <  bud_mant[                  ;; Water autority would repare if the distance is alrge than a random number betwee 0 and 1 and if total cost upto this point is lower than budget
            ask ?2 [
              set tot_cost_Maintance tot_cost_Maintance + 1                                                           ;;add new cost to total cost
              set infra_S_age infra_S_age - 0.1 * infra_S_age                                                         ;;update the state (age) of infrastructure
              set invest_here_S 1
            ]
          ]
        ]
      ])

      if ticks mod 10 = 0[               ;;in years when government invest in new infrastructure
        let tot_cost_New 0
        let bud_new 2 * round (tot_neighborhoods * New_infra_investment)
        let rank_A2 sort-on [1 - distance_metric_New_F] patches with [neighborhood_here? = TRUE]   ;;;sort neighborhoods based on distance metric Action 3 new infra F.
        let rank_A4 sort-on [1 - distance_metric_New_S] patches with [neighborhood_here? = TRUE]    ;;;sort neighborhoods based on distance metric Action 4 new infra F.
          (foreach  rank_A2  rank_A4[ [?1 ?2] ->

            ask ?1 [
              if tot_cost_New < bud_new[                                     ;;if total cost until now is lower than budget for new investments, then create new infra in this patch
                set tot_cost_New tot_cost_New + 5                                                                        ;;add new cost to total cost
                set infra_F_age 0                                                                                            ;;update the state (age) of infrastructure
                set Infra_flood 1
                set invest_here_F 1                                                                                        ;;update the state of the patch. Now the patch contains a piece of infrastructure                                                                                    ;;set new probability of failure = 0
              ]
            ]
            ask ?2 [
              if tot_cost_New < bud_new [                                    ;;if total cost until now is lower than budget for new investments, then create new infra in this patch
                set tot_cost_New tot_cost_New + 5                                                                          ;;add new cost to total cost
                set infra_S_age 0                                                                                            ;;update the state (age) of infrastructure
                set Infra_supply 1
                set invest_here_S 1                                                                                           ;;update the state of the patch. Now the patch contains a piece of infrastructure                                                                                    ;;set new probability of failure = 0
              ]
            ]
          ])
      ]
    ]


    if budget-distribution = "local"[                ;In this setting only the action with the higher distance is taken
      let distance_metric_maintenance_S_max max [distance_metric_maintenance_S] of patches with [neighborhood_here? = TRUE]
      let distance_metric_maintenance_F_max max [distance_metric_maintenance_F] of patches with [neighborhood_here? = TRUE]
      let tot_cost_Maintance 0
      let bud_mant 2 * round (tot_neighborhoods * maintenance)                                                    ;Scale budget proportionally to the number of neighborhoods
      let rank_A13 sort-on [(1 - distance_metric_maintenance_S) + (1 - distance_metric_maintenance_F)] patches with [neighborhood_here? = TRUE]                                      ;Sort neighborhoods based on distance metric Action 1 mantanance F.
      foreach rank_A13 [ ?1 ->
        ask ?1 [
          if distance_metric_maintenance_F > distance_metric_maintenance_S and [infra_flood] of ?1 = 1 and tot_cost_Maintance < bud_mant [
            set tot_cost_Maintance tot_cost_Maintance + 1                                                                                      ;;add to the total cost
            set infra_F_age infra_F_age - 0.1 * infra_F_age
            set invest_here_F 1
          ]
          if distance_metric_maintenance_F < distance_metric_maintenance_S and [infra_supply] of ?1 = 1 and tot_cost_Maintance < bud_mant [
            set tot_cost_Maintance tot_cost_Maintance + 1                                                                                      ;;add to the total cost
            set infra_S_age infra_S_age - 0.1 * infra_S_age
            set invest_here_S 1
          ]
          if distance_metric_maintenance_F = distance_metric_maintenance_S and tot_cost_Maintance < bud_mant [

            if [infra_supply] of ?1 = 1 and [infra_flood] of ?1 = 1[
              ifelse(random-float 1 > 0.5)[
                set tot_cost_Maintance tot_cost_Maintance + 1                                                                                   ;;add to the total cost
                set infra_F_age infra_F_age - 0.1 * infra_F_age
                set invest_here_F 1
              ]

              [
                set tot_cost_Maintance tot_cost_Maintance + 1                                                                                   ;;add to the total cost
                set infra_S_age infra_S_age - 0.1 * infra_S_age
                set invest_here_S 1
              ]

              if [infra_supply] of ?1 = 1 and [infra_flood] of ?1 = 0[
                set tot_cost_Maintance tot_cost_Maintance + 1                                                                                   ;;add to the total cost
                set infra_F_age infra_F_age - 0.1 * infra_F_age
                set invest_here_F 1
              ]
              if [infra_supply] of ?1 = 0 and [infra_flood] of ?1 = 1[
              set tot_cost_Maintance tot_cost_Maintance + 1                                                                                      ;;add to the total cost
              set infra_S_age infra_S_age - 0.1 * infra_S_age ;#
              set invest_here_S 1
              ]
            ]
          ]
        ]
      ]

      if ticks mod 10 = 0[
        let tot_cost_New 0
        let bud_new 2 * round (tot_neighborhoods * New_infra_investment)
        let rank_A24 sort-on [(1 - distance_metric_New_F) + (1 - distance_metric_New_S)] patches with [neighborhood_here? = TRUE]                                                      ;;;sort neighborhoods based on distance metric Action 3 new infra F.
        foreach  rank_A24[ ?1 ->
          ask ?1 [
            if distance_metric_New_F > distance_metric_New_S and tot_cost_New < bud_new[
              set tot_cost_New tot_cost_New + 5                                                              ;;add new cost to total cost
              set infra_F_age 0                                                                                            ;;update the state (age) of infrastructure
              set Infra_flood 1
              set invest_here_F 1
            ]
            if distance_metric_New_F < distance_metric_New_S and tot_cost_New < bud_new[
              set tot_cost_New tot_cost_New + 5                                                              ;;add new cost to total cost
              set infra_S_age 0                                                                                            ;;update the state (age) of infrastructure
              set Infra_supply 1
              set invest_here_S 1
            ]
            if distance_metric_New_F = distance_metric_New_S and tot_cost_New < bud_new[
              ifelse(random-float 1 > 0.5)[
                set tot_cost_New tot_cost_New + 5                                                                                   ;;add to the total cost
                set infra_F_age 0
                 set Infra_flood 1
                 set invest_here_F 1
              ]
              [
                set tot_cost_New tot_cost_New + 5                                                                                   ;;add to the total cost
                set infra_S_age 0
                set Infra_supply 1
                set invest_here_S 1
              ]

            ]
          ]
        ]
      ]
    ]

    if budget-distribution = "local-bothactions"[                ;In this setting only the action with the higher distance is taken
      let tot_cost_Maintance 0
      let bud_mant 2 * round (tot_neighborhoods * maintenance ) ;Scale budget proportionally to the number of neighborhoods
      let rank_A13 sort-on [(1 - distance_metric_maintenance_S) + (1 - distance_metric_maintenance_F)] patches with [neighborhood_here? = TRUE]                                      ;Sort neighborhoods based on distance metric Action 1 mantanance F.
      foreach rank_A13 [ ?1 ->
        ask ?1 [
          if [infra_flood] of ?1 = 1 and tot_cost_Maintance < bud_mant [
            set tot_cost_Maintance tot_cost_Maintance + 1                                                                                      ;;add to the total cost
            set infra_F_age infra_F_age - 0.1 * infra_F_age
            set invest_here_F 1
          ]
          if [infra_supply] of ?1 = 1 and tot_cost_Maintance < bud_mant [
            set tot_cost_Maintance tot_cost_Maintance + 1                                                                                      ;;add to the total cost
            set infra_S_age infra_S_age - 0.1 * infra_S_age
            set invest_here_S 1
          ]
        ]
      ]

      if ticks mod 10 = 0[
        let tot_cost_New 0
        let bud_new 2 * round (tot_neighborhoods * New_infra_investment)
        let rank_A24 sort-on [(1 - distance_metric_New_F) + (1 - distance_metric_New_S)] patches with [neighborhood_here? = TRUE]                                                      ;;;sort neighborhoods based on distance metric Action 3 new infra F.
        foreach  rank_A24[ ?1 ->
          ask ?1 [
            if tot_cost_New < bud_new[
              set tot_cost_New tot_cost_New + 5                                                              ;;add new cost to total cost
              set infra_F_age 0                                                                                            ;;update the state (age) of infrastructure
              set Infra_flood 1
              set invest_here_F 1
            ]
            if tot_cost_New < bud_new[
              set tot_cost_New tot_cost_New + 5                                                              ;;add new cost to total cost
              set infra_S_age 0                                                                                            ;;update the state (age) of infrastructure
              set Infra_supply 1
              set invest_here_S 1
            ]

          ]
        ]
      ]
    ]
end